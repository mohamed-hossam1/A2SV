# Problem: Karen and Coffee - https://codeforces.com/contest/816/problem/B

using namespace std;
#include <bits/stdc++.h>
 
#define fast                      \
    ios_base::sync_with_stdio(0); \
    cin.tie(0);                   \
    cout.tie(0);
typedef vector<int> vi;
typedef vector<long long> vl;
#define int long long
#define yes cout << "YES\n"
#define no cout << "NO\n"
#define For(i) for (int j = 0; j < i; j++)
#define endl '\n'
#define dd(b, a) cout << fixed << setprecision(b) << a << endl;
#define all(s) s.begin(), s.end()
 
int gcd(int x, int y)
{
    while (y != 0)
    {
        x %= y;
        swap(x, y);
    }
    return x;
}
int g(int x, int y)
{
    return x / gcd(x, y) * y;
}
 
int binary(int x)
{
    int binary = 0;
    while (x)
    {
        binary = binary * 10 + (x % 2);
        x /= 2;
    }
    return binary;
}
 
bool isprime(int x)
{
    if (x == 1)
        return false;
    for (int i = 2; i * i <= x; i++)
    {
        if (x % i == 0)
            return false;
    }
    return true;
}
 
vi num;
void divisor(int x)
{
 
    for (int i = 2; i * i <= x; i++)
    {
        while (x % i == 0)
        {
            num.push_back(i);
            x /= i;
        }
    }
    if (x > 1)
        num.push_back(x);
}
/*---------------------------------------------------*/
bool cmp(pair <int,int> a, pair <int,int> b){
    if(a.first > b.first)return true;
    else if(a.first == b.first){
        if(a.second > b.second)return true;
        else return false;
    }
    else return false;
}

void solve () {
	int n,k,q;
    cin >> n>>k>>q;
    int arr[200005]{};
    int s[200005]{};
    while (n--)
    {
        int l, r;
        cin >> l >> r;
        arr[l]++, arr[r + 1]--;
    }
    for(int i =1; i < 200005 ; i++){
        arr[i] += arr[i - 1];
        if((arr[i] >= k))s[i]++;
        s[i] += s[i - 1];
    }
    while (q--)
    {
        int l, r;
        cin >> l >> r;
        cout << s[r] - s[l - 1] << endl;
    }

    
    

    
}
 
 
signed main()
{
    fast;
    int t = 1;
    // cin >> t;
    while (t--)
    {
        solve();
        // if (t)
        //     cout << endl;
    }
}